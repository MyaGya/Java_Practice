크레인 인형뽑기 게임
---
package Programers;

class Solution {

    public int solution(int[][] board, int[] moves) {
        int answer = 0;
        return answer;
    }


    public static void main(String[] args) {
        Solution tmp = new Solution();
        int[][] board = new int[][]{{0, 0, 0, 0, 0}, {0, 0, 1, 0, 3}, {0, 2, 5, 0, 1},
            {4, 2, 4, 4, 2},
            {3, 5, 1, 3, 1}};
        int[] moves = new int[]{1, 5, 3, 5, 1, 2, 1, 4};
        tmp.solution(board, moves);
    }
}
---
두 개 뽑아서 더하기
---
package Programers;

import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;

class Solution {

    public int[] solution(int[] numbers) {
        HashSet<Integer> ans = new HashSet<Integer>();
        for(int i=0;i<numbers.length;i++){
            for(int j=i+1;j<numbers.length;j++){
                ans.add(numbers[i] + numbers[j]);
            }
        }
        int[] ans2 = new int[ans.size()];
        int i =0;
        for (int number:ans){
            ans2[i++] = number;
        }
        Arrays.sort(ans2);
        return ans2;
    }

    public static void main(String[] args) {
        Solution tmp = new Solution();
        System.out.println(tmp.solution(new int[] {2,1,3,4,1}));
    }
}
---
모의고사
package Programers;


import java.util.ArrayList;

class Solution {

    public int[] solution(int[] answers) {
        int[] user1 = {1, 2, 3, 4, 5};
        int[] user2 = {2, 1, 2, 3, 2, 4, 2, 5};
        int[] user3 = {3, 3, 1, 1, 2, 2, 4, 4, 5, 5};
        int user1Count = 0;
        int user2Count = 0;
        int user3Count = 0;
        for (int i = 0; i < answers.length; i++) {
            if (answers[i] == user1[i % user1.length]) {
                user1Count++;
            }
            if (answers[i] == user2[i % user2.length]) {
                user2Count++;
            }
            if (answers[i] == user3[i % user3.length]) {
                user3Count++;
            }
        }
        int[] answer = new int[]{user1Count, user2Count, user3Count};
        int maxThereNumber = Math.max((Math.max(user1Count,user2Count)),user3Count);
        ArrayList<Integer> tmp = new ArrayList();
        for(int i=0;i<3;i++){
            if(answer[i] == maxThereNumber){
                tmp.add(i+1);
            }
        }

        return tmp.stream().sorted().mapToInt(i -> i).toArray();
    }

    public static void main(String[] args) {
        Solution tmp = new Solution();
        System.out.println(tmp.solution(new int[]{1, 3, 2, 4, 2}));
    }
}
---
K번째수
package Programers;

import java.util.ArrayList;
import java.util.Arrays;

class Solution {

    public int[] solution(int[] array, int[][] commands) {
        //int [] answer = new int[commands.length];
        ArrayList<Integer> answer = new ArrayList<Integer>();
        for (int[] command : commands) {
            int[] waitingSortData = new int[command[1] - command[0] + 1];
            int waitingSortDataCount = 0;
            for (int i = command[0] - 1; i <= command[1] - 1; i++) {
                waitingSortData[waitingSortDataCount++] = array[i];
            }
            Arrays.sort(waitingSortData);
            answer.add(waitingSortData[command[2]-1]);
        }
        return answer.stream().mapToInt(i -> i).toArray();
    }

    public static void main(String[] args) {
        Solution tmp = new Solution();
        System.out.println(tmp.solution(new int[]{1, 5, 2, 6, 3, 7, 4},new int[][]{{2, 5, 3},{4, 4, 1},{1, 7, 3}}));
    }
}
---